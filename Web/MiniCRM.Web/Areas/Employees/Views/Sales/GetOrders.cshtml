@model MiniCRM.Web.Infrastructure.PaginatedList<MiniCRM.Web.ViewModels.Sales.SaleViewModel>

@{
    this.ViewData["Title"] = $"{this.ViewData["FullName"]} orders list";

}
<h2>@ViewData["Title"]</h2>


<table class="table table-hover">
    <thead>
        <tr>
            <th>
                <a asp-action="GetOrders" asp-route-sortOrder="@ViewData["SortByDate"]" asp-route-fullname="@ViewData["FullName"]" asp-route-customerId="@ViewData["CustomerId"]" asp-route-pageNumber="@Model.PageIndex">Ordered date</a>
            </th>
            <th>
                <a asp-action="GetOrders" asp-route-sortOrder="@ViewData["SortByName"]" asp-route-fullname="@ViewData["FullName"]">Products </a>
            </th>
            <th>
                <a asp-action="GetOrders" asp-route-sortOrder="@ViewData["SortByQuantity"]" asp-route-fullname="@ViewData["FullName"]">Benefit</a>
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var order in Model)
        {
            var tm = "#myModal" + order.Products;
            var mid = order.Products;

            <tr data-toggle="modal" data-id="@order.Id" data-target="#orderModal">
                <td>
                    @order.CreatedOn
                </td>

                <td>
                    @string.Join(", ", order.Products.Select(x => x.ProductName))
                </td>
                <td>
                    @order.Products.Sum(x => x.Benefit)
                </td>
                <td>

                    @*<input class="search btn-default" type="button" value="Search"
                        data-assigned-id="@order.Id" data-toggle="modal" data-target="#detailsModal" />*@
                    <input class="getDetails btn btn-primary" type="button" value="Get Details"
                           data-assigned-id="@order.Id" data-toggle="modal" data-target="#detailsModal" />


                </td>

            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<ul class="pagination">

    <li>
        <a asp-action="GetOrders"
           asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-fullname="@ViewData["FullName"]" asp-route-customerId="@ViewData["CustomerId"]"
           class="btn @prevDisabled">
            Previous
        </a>
    </li>
    @for (var i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(Model.PageIndex == i ? "active" : string.Empty)">
            <a class="page-link rounded-pill" asp-route-pageNumber="@i" asp-route-fullname="@ViewData["FullName"]" asp-route-customerId="@ViewData["CustomerId"]">@i</a>
        </li>
    }
    <li>
        <a asp-action="GetOrders"
           asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-fullname="@ViewData["FullName"]" asp-route-customerId="@ViewData["CustomerId"]"
           class="btn  @nextDisabled">
            Next
        </a>
    </li>
</ul>



<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order details</h5>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="partial"></div>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script type="text/javascript">
    $(function () {
        $('.getDetails').click(function () {
            var id = $(this).data('assigned-id');
            var route = '@Url.Action("Details", "Sales")?id=' + id;
            $('#partial').load(route);
        });

    });
    </script>

}
